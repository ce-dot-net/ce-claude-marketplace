#!/bin/bash
# ACE Plugin Installation Script
# Automatically configures npm registry for GitHub Packages

set -e

echo "üéØ ACE Plugin Installation"
echo "=========================="
echo ""

# Get the plugin directory
PLUGIN_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

# Get the marketplace root (2 levels up from plugin)
MARKETPLACE_ROOT="$( cd "$PLUGIN_DIR/../.." && pwd )"

# Target .npmrc location (in marketplace root)
NPMRC_PATH="$MARKETPLACE_ROOT/.npmrc"

echo "üìÅ Plugin directory: $PLUGIN_DIR"
echo "üìÅ Marketplace root: $MARKETPLACE_ROOT"
echo ""

# Check for GitHub token
GITHUB_TOKEN_SET=false
if [ -n "$GITHUB_TOKEN" ]; then
    echo "‚úÖ GITHUB_TOKEN found in environment"
    GITHUB_TOKEN_SET=true
elif [ -f "$MARKETPLACE_ROOT/mcp-clients/ce-ai-ace-client/.env" ]; then
    echo "üìÑ Loading GITHUB_TOKEN from .env file"
    # Source .env file to get GITHUB_TOKEN
    export $(grep "^GITHUB_TOKEN=" "$MARKETPLACE_ROOT/mcp-clients/ce-ai-ace-client/.env" | xargs)
    if [ -n "$GITHUB_TOKEN" ]; then
        echo "‚úÖ GITHUB_TOKEN loaded from .env"
        GITHUB_TOKEN_SET=true
    fi
fi

if [ "$GITHUB_TOKEN_SET" = false ]; then
    echo "‚ö†Ô∏è  GITHUB_TOKEN not found!"
    echo "   For private packages, set GITHUB_TOKEN environment variable"
    echo "   or add to mcp-clients/ce-ai-ace-client/.env file"
fi

echo ""

# Create or update .npmrc
if [ -f "$NPMRC_PATH" ]; then
    echo "‚úÖ .npmrc already exists at: $NPMRC_PATH"

    # Check if it has GitHub Packages config
    if grep -q "@ce-dot-net:registry=https://npm.pkg.github.com" "$NPMRC_PATH"; then
        echo "‚úÖ GitHub Packages registry already configured"

        # Update auth token if GITHUB_TOKEN is set and auth line is missing
        if [ "$GITHUB_TOKEN_SET" = true ] && ! grep -q "//npm.pkg.github.com/:_authToken=" "$NPMRC_PATH"; then
            echo "üìù Adding authentication token to .npmrc"
            echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> "$NPMRC_PATH"
            echo "‚úÖ Authentication token added"
        fi
    else
        echo "‚ö†Ô∏è  .npmrc exists but GitHub Packages not configured"
        echo ""
        echo "üìù Adding GitHub Packages configuration"
        echo "" >> "$NPMRC_PATH"
        echo "# ACE Plugin - GitHub Packages Configuration" >> "$NPMRC_PATH"
        echo "@ce-dot-net:registry=https://npm.pkg.github.com" >> "$NPMRC_PATH"
        if [ "$GITHUB_TOKEN_SET" = true ]; then
            echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> "$NPMRC_PATH"
        fi
        echo "‚úÖ Added GitHub Packages configuration"
    fi
else
    echo "üìù Creating .npmrc at: $NPMRC_PATH"
    cat > "$NPMRC_PATH" <<EOF
# ACE Plugin - GitHub Packages Configuration
# Auto-generated by ACE plugin installation
# DO NOT COMMIT THIS FILE - it contains authentication token

# Use GitHub Packages for @ce-dot-net scoped packages
@ce-dot-net:registry=https://npm.pkg.github.com
EOF

    # Add auth token if available
    if [ "$GITHUB_TOKEN_SET" = true ]; then
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> "$NPMRC_PATH"
        echo "‚úÖ Created .npmrc with GitHub Packages configuration and authentication"
    else
        echo "‚úÖ Created .npmrc with GitHub Packages configuration (no authentication)"
        echo "   For private packages, set GITHUB_TOKEN and re-run this script"
    fi
fi

echo ""
echo "üîê Environment Variables"
echo "========================"
echo ""

# Check if environment variables are set
ENV_VARS_SET=true

if [ -z "$ACE_SERVER_URL" ]; then
    echo "‚ö†Ô∏è  ACE_SERVER_URL not set"
    ENV_VARS_SET=false
else
    echo "‚úÖ ACE_SERVER_URL: $ACE_SERVER_URL"
fi

if [ -z "$ACE_API_TOKEN" ]; then
    echo "‚ö†Ô∏è  ACE_API_TOKEN not set"
    ENV_VARS_SET=false
else
    echo "‚úÖ ACE_API_TOKEN: ${ACE_API_TOKEN:0:10}..."
fi

if [ -z "$ACE_PROJECT_ID" ]; then
    echo "‚ö†Ô∏è  ACE_PROJECT_ID not set"
    ENV_VARS_SET=false
else
    echo "‚úÖ ACE_PROJECT_ID: $ACE_PROJECT_ID"
fi

if [ "$ENV_VARS_SET" = false ]; then
    echo ""
    echo "‚ö†Ô∏è  Required environment variables not set!"
    echo ""
    echo "Add to your shell profile (~/.zshrc or ~/.bashrc):"
    echo ""
    echo "export ACE_SERVER_URL=\"http://localhost:9000\""
    echo "export ACE_API_TOKEN=\"your-token-here\""
    echo "export ACE_PROJECT_ID=\"your-project-id\""
    echo ""
    echo "Then run: source ~/.zshrc"
fi

echo ""
echo "üìã Configuration Files"
echo "======================"
echo ""

# Check if plugin.json exists (user should copy from template)
if [ -f "$PLUGIN_DIR/.claude-plugin/plugin.json" ]; then
    echo "‚úÖ plugin.json exists"
else
    echo "‚ö†Ô∏è  plugin.json not found"
    echo ""
    echo "Copy from template:"
    echo "  cd $PLUGIN_DIR"
    echo "  cp .claude-plugin/plugin.template.json .claude-plugin/plugin.json"
fi

echo ""
echo "‚úÖ Installation Complete!"
echo ""
echo "Next steps:"
echo "  1. Set environment variables (if not already set)"
echo "  2. Copy .claude-plugin/plugin.template.json to .claude-plugin/plugin.json"
echo "  3. Restart Claude Code"
echo "  4. Test with: /ace-status"
echo ""
echo "For help: See CONFIGURATION.md in the plugin directory"
